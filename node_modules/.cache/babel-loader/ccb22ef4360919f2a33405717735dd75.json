{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n/* redux toolkit is good for more complex applications, \r\nto keep clean, short code, less prone to error */\n\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  //give it any name you want\n  name: \"counter\",\n  initialState,\n  //also means initialState: initialState\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n/* tap into the actions object:\r\ncounterSlice.actions.toggleCounter - for example */\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n  /* if you have a large code base, to combine all reducers:\r\n  reducer: { counter: counterSlice.reducer }, */\n\n});\nexport const counterActions = counterSlice.actions;\nexport default store; // make sure to default export the store, not the component function","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["C:/Users/Klizzy/Desktop/my-projects/redux-react/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n/* redux toolkit is good for more complex applications, \r\nto keep clean, short code, less prone to error */\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  //give it any name you want\r\n  name: \"counter\",\r\n  initialState, //also means initialState: initialState\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\n/* tap into the actions object:\r\ncounterSlice.actions.toggleCounter - for example */\r\n\r\nconst store = configureStore({\r\n  reducer: counterSlice.reducer,\r\n  /* if you have a large code base, to combine all reducers:\r\n  reducer: { counter: counterSlice.reducer }, */\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n// make sure to default export the store, not the component function\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAArB;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/B;EACAM,IAAI,EAAE,SAFyB;EAG/BJ,YAH+B;EAGjB;EACdK,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQ;MACfA,KAAK,CAACN,OAAN;IACD,CAHO;;IAIRO,SAAS,CAACD,KAAD,EAAQ;MACfA,KAAK,CAACN,OAAN;IACD,CANO;;IAORQ,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACtBH,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,OAAvC;IACD,CATO;;IAURC,aAAa,CAACL,KAAD,EAAQ;MACnBA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;IACD;;EAZO;AAJqB,CAAD,CAAhC;AAoBA;AACA;;AAEA,MAAMW,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EAAEX,YAAY,CAACW;EACtB;AACF;;AAH6B,CAAD,CAA5B;AAMA,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAApC;AAEP,eAAeH,KAAf,C,CACA"},"metadata":{},"sourceType":"module"}