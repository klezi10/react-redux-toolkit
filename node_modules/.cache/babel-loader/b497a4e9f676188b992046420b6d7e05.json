{"ast":null,"code":"// step 1 - create store\nimport { legacy_createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\nfunction counterReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n      /* make sure to add all states, even if no changes\r\n      otherwise showCounter will be considered falsy & create a bug\r\n      because we override the old state (not merge) */\n      // do not mutate the existing state in redux, instead override it\n\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n}\n\nconst store = legacy_createStore(counterReducer);\nexport default store; // make sure to export the store, not the component function","map":{"version":3,"names":["legacy_createStore","initialState","counter","showCounter","counterReducer","state","action","type","amount","store"],"sources":["C:/Users/Klizzy/Desktop/my-projects/redux-react/src/store/index.js"],"sourcesContent":["// step 1 - create store\r\n\r\nimport { legacy_createStore } from \"redux\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nfunction counterReducer(state = initialState, action) {\r\n  if (action.type === \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n      /* make sure to add all states, even if no changes\r\n      otherwise showCounter will be considered falsy & create a bug\r\n      because we override the old state (not merge) */\r\n      // do not mutate the existing state in redux, instead override it\r\n    };\r\n  }\r\n\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      showCounter: !state.showCounter,\r\n      counter: state.counter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nconst store = legacy_createStore(counterReducer);\r\n\r\nexport default store;\r\n// make sure to export the store, not the component function\r\n"],"mappings":"AAAA;AAEA,SAASA,kBAAT,QAAmC,OAAnC;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAArB;;AAEA,SAASC,cAAT,GAAsD;EAAA,IAA9BC,KAA8B,uEAAtBJ,YAAsB;EAAA,IAARK,MAAQ;;EACpD,IAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAEE,KAAK,CAACF;MACnB;AACN;AACA;MACM;;IANK,CAAP;EAQD;;EAED,IAAIG,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;IAC9B,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,MAD3B;MAELL,WAAW,EAAEE,KAAK,CAACF;IAFd,CAAP;EAID;;EAED,IAAIG,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAEE,KAAK,CAACF;IAFd,CAAP;EAID;;EAED,IAAIG,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;IAC5B,OAAO;MACLJ,WAAW,EAAE,CAACE,KAAK,CAACF,WADf;MAELD,OAAO,EAAEG,KAAK,CAACH;IAFV,CAAP;EAID;;EAED,OAAOG,KAAP;AACD;;AAED,MAAMI,KAAK,GAAGT,kBAAkB,CAACI,cAAD,CAAhC;AAEA,eAAeK,KAAf,C,CACA"},"metadata":{},"sourceType":"module"}